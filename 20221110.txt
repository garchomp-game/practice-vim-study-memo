the_vim_way/0_mechanics.txt
>Gで行末まで一気に字下げ可能。
the_vim_way/2_foo_bar.js
A;の後にj.を繰り返すことで一気にセミコロンを置くことができる
A;j.j.
C=c$ カーソル位置から行末まで削除して挿入モード
s=cl 有効なエラーをすべて列挙する。:cl [from] [, [to]]
S=^C ccと同じ
I=^i 行頭に移動してから挿入モード
A=$a 行末に移動してから挿入モード
o=A<CR> 下の行に改行入れて挿入モード
O=ko 上の行に改行入れて挿入モード

TIP4: 色々なアンドゥ
.=u
;=,
n=N
&=u
@x=u(マクロ系)
the_vim_way/1_copy_content.txt
TIP8
vimではアンドゥの粒度を自分で制御できる。
インサートモードになってから抜けるまでが一つの粒度になるので、
定期的に入力モードから抜けておくと安全である。
目安としては、改行の単位、もしくは手が止まる単位で抜けておくのが
良いだろう。

TIP9: 変更を繰り返し可能なものにする
Vim Golfという考え方。

例えば、
db/x, b/dw,dawがあったとする。
ドットの公式にに当てはめると、最後に適応されるのはそれぞれ
x, dw, daw
である。dawは一つのコマンドとしてドットに記録されるので、このコマンドが
最も良いことが明白であろう。

タイブレーク 〜〜繰り返し性が一番高いのはどれか？〜〜

normal_mode/sprite.css
<C-x>で減算、<C-a>で加算。
数字指定もでき、カーソルが数字でない場合、次の数字までジャンプした上で
計算をする。
TIP11: 繰り返しで済むなら、回数を指定しない。
d2wや2dw出でいるところをあえてdw.とすることで、間違えて多めに
消したとしても、.で1単語ずつ戻せる。
繰り返して、実行して、元に戻せる。このマントラを忘れないように。

TIP12: 統合して統治せよ
vimが強力な理由は、オペレータとモーションの組み合わせから得られる。

オペレーター一覧
c=変更
d=削除
y=レジスタにヤンク
g~=大文字とこも似の入替え
gu=小文字化
gU=大文字化
zz=入力中のカーソルを画面中央に持ってく
>=インデントを深くする
<=インデントを浅くする
==自動インデント(ggG=とかよく使う)
!={motion}で指定される行を外部プログラムを使ってフィルタリングする
gc=コメント化(vim-plugからvim-commentaryを入れていた場合)

~~オペレーターは自由に定義することができる~~
詳しくは、:h map-operatorで確認してみよう。

~~挿入モード中に使えるショートカットキー~~

<C-h>: 一文字を削除(バックスペース)
<C-w>: 直前の一眼とを削除
<C-u>: 行頭までを削除
<C-o>: ノーマル挿入モード

TIP15: 挿入モードから抜けないでレジスタから貼り付け
yt{char}: charで指定した文字の手前までコピーする
<C-r>: レジスタの内容を挿入する。
<C-v>{123}:10進コードで表現される文字を挿入
<C-v>u{123}:16進コードで表現される文字を挿入
TIP18: ダイアグラフによって特殊文字を挿入
<C-K>(小文字のK){char1}{char2}と入力すると、特殊文字の入力をすることができる。
ヘルプは、:h digraphs-defaultで見れる

TIP19: 置換モードで既存のテキストを上書き
f.R, b
Rでリプレイスモードに移行でき、入力したものが置き換わる。
h: tabstop
R: 置換モードに入る
gR: 仮想置換モードに入る
r{char}, gr{char}: ワンショットバージョン
※
R: 置換モードに入る
gR: 仮想置換モードに入る
r{char}, gr{char}: ワンショットバージョン
