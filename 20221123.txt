TIP94: 置換時に算術演算を行う
タグの数字の部分だけを検索するには、
\v\<\/?h\zs\d
といった方法で検索することで実現できる。
\/?で/(スラッシュ)があった場合のみヒットするようにしている。

この検索結果を使って置換する方法は以下の通り。
%s//\=submatch(0)-1/g
submatch関数を使うことで、数値を取得することができる。
引数は配列のindexを指定する。Java風に例えるなら
public String submatch(int index)
といったところだろうか。
~~個人的な考察~~
vim scriptはjsと同じで、厳密な型の縛りはないように思える。
よって、int = String - intも成立しているような挙動になってるかもしれない。

TIP95: 2つ以上の単語を入れ替える
The dog bit the man.
というテキストのdogとmanを入れ替えたかった時、
\v(<man>|<dog>)
で検索してから
%s//\=swapper[submatch(1)]/g
で変換することができる。なお、このswapperには予め
let swapper={"dog":"man", "man":"dog"}
という連想配列を作っておく必要がある。
このサンプルはあくまでも素案であり、最適解ではない。
もっと工夫することもできる。

別解
\v(<dog>)([^m]*)(<man>)
で検索してから
%s//\3\2\1/g
で置換することもできる。
TIP96: 複数ファイル間で検索と置換を行う

substitution/refactor-project/*
:cdで移動したああと args **/*.txtでテキスト系を開く。
これらのファイルに対して一括で置換する方法は、
argdo %s//Practical/ge
でできる。
eフラグはエラーを出ないようにすることができる。
ちなみに、このやり方は、乱射的なやり方とも言える。
的を絞ったやり方もある。

独自コマンドを定義したものをプラグインとしてインストール、
もしくはvimrcに追記してQargsコマンドを定義して利用することで、
簡単に目的を絞った置換ができる。
Quickfixfilenames()メソッドの処理詳細については後で深く検討するので、
いったんvimrcに残しておく。

TIP98: パターンを含む行を削除する
global/episodes.html
例えば、タグの中のテキストだけを残したかったとする。
その場合は、
/\v\<\/?\w+>
で検索した後、
:g//d
で中身のテキストだけを残すことができる。
:deleteコマンドは対象の行を削除するので、削除対象の行をマークできれば
とりあえずOK。なので、タグの先頭部分だけをマッチするようにしている。
ちなみに、:vコマンドを実行すると、:gコマンドと逆のことをする。
:h :v
TIP99: レジスタにtodoアイテムを収集する
例えば、todoリストからtodoの行だけを抜き取りたかったら、
qaq
でレジスタの内容を空にしてから
g/TODO/yank A
でレジスタaに追記すればいいだろう。
TIP100: cssファイル中のルールのプロパティをアルファベット順に並べ替える
一つのブロックをソートする場合は
vi{
:sort
でできる。
ではこれを複数行で適応するにはどうしたらいいか？
答えは、
:g/{/ .+1,/}/-1 sort
となる。
