ワークディレクトリの設定を行うには:lcdコマンドを使う
一括で設定する場合は、:windo lcdコマンドを使うと良い。
詳細情報は、vimcastsの確認をする(休憩中に確認する)

タブのオープンとクローズについて
:tabeditで新しいタブを開くことができる(NvChadとかで結構使えそう)
※NvChadでも使えたが、NvChadではまた違う意味になるため使う場合は注意(バグの可能性もある？)

:tabclose=現在のタブを閉じるコマンド
:tabonly=現在開いているタブ以外のタブを閉じるコマンド
:tabm{number}=タブを移動する(先頭は0、それ以外は2以上)

:editで作業ディレクトリに対する相対パスで開くことができる
:edit code/to/path
※editは補完を使うことができる。もちろん:argsも
:edit %はバッファ内にあるファイルのパスを保管して表示してくれる
:edit %:h<TAB>とすることで、ファイル名を含めない状態でフォルダまでの
パスを保管してくれる

vimrcで
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'
という設定を追加することで、%%で%:hと同じことができるようになる。つまり
:edit %%
でバッファのフォルダーまでのパスを補完してくれるようになる。

rails.vimというプラグインを使うことで、:set path+=app/**を
しなくていいだけでなく、その他様々なプラグインが用意されている。
これにより、:findでの検索がより便利になる。

vimのファイルエクスプローラーについて
-(ハイフン)で親ディレクトリに遡る。

:e .と:Eは同義
netrw中に
d=ディレクトリ作成
%=ファイル作成
D=ファイルやディレクトリ差悪女

:editで新規フォルダと一緒に作成した場合、とりあえず新規作成はするけど保存が
されない。

この場合は、外部コマンドのmkdirを呼び出せば良い。つまり

:edit hoge/huga/index.html
:!mkdir -p %:h
:write
で成功する。

ファイルが読み込み専用になっていて、sudoで上書きする必要がある場合、
:w !sudo tee % > /dev/null
で上書きすることができる。

カーソルの移動について
w=次の単語の先頭に前進
e=現在の単語もしくは次の単語の末尾に前進
b=現在の単語もしくは前の単語の先頭に後退
ge=前の単語の末尾に後退

