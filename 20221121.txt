TIP82: 現在のパターンにマッチするものの数を数える
:%s///gnを使うと、前回検索したパターンに一致するキーワードの数を
カウントしてくれる。

:%sは置換するコマンド。
このコマンドは
:%s/{検索文字}/{置換文字}/{ビジュアルモーション}
で構成されている

※[n]	マッチの個数を表示し、実際には置換を行わない。

この内、置換文字は省略可能。
つまり、:%s///gnとすると、（多分）検索レジスタが検索対象となり、そのまま順列に検索すると。

TIP83: 検索のマッチの末尾にカーソルをオフセットする
検索は
/{text}/{motion}
といった使い方ができる。これを利用して
/lang/e
でlangの末尾(g)にカーソルを移動することで、
単数形、複数形問わず安全に置換することができる。

TIP84: マッチ全体に対して処理を行う
search/tag-heirarchy
XhtmlとXml両方含めるためには
/\vX(ht)?ml
でできる、これに大文字小文字の区別を矯正する\Cを入れて
/\vX(ht)?ml\C
とすることで正確な検索ができる。
これに対してgU//eで大文字にする
分解すると
gU 大文字
// 前回の検索箇所
e  検索対象の単語の末尾

※gU{text|searchResult}{motion}

からなる。
あとは//<CR>.で繰り返せる

~~寄り道~~
ちなみにマクロでやる場合は
qn//<CR>.q
のあと、@nで繰り返すことができる。

TIP85: 検索履歴を繰り返しながら複雑なパターンを作り上げる
search/quoted-strings
例えば、シングルクォートをダブルクォートに替えたかったとする。
ここでポイントになるのは、アポストロフィーの'は変えずに、
囲うための'だけを変更すること。

答えは以下のようになる
/\v'(([^']|'\w)+)'
:%s//"\1"/g

[^{char}] char以外の文字のみヒット
{char}\w charの後に単語(w[ord])が続く場合のみヒット
カッコについては、おそらく一番外側の()が\1で、
その中にあるカッコが\2として対応しているはず（多分…）

TIP87: 置換コマンド
:substituteコマンドについての紹介
:[range]s[ubstitute]/{pattern}/{string}/[flags]

フラグについては、:h s_flagsを参照
特殊な意味を持つ文字については:h sub-replace-specialを参照

TIP89: 一括置換について
:%s/pattern/text/g
の
% Y軸
g X軸
である。
注意したいのは、gは行の中でヒットしたものが対象なので、
ファイル全体ではない。
%だけだと、行の先頭だけが対象であることに注意
